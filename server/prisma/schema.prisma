generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                        String            @id @default(cuid())
  name                      String
  email                     String            @unique
  password                  String
  isVerified               Boolean           @default(false)
  city                      String?
  state                     String?
  verificationToken         String?
  verificationTokenExpiresAt DateTime?
  reminders                 Reminder[]        @relation("UserReminders")
  testPerformance          TestPerformance[] @relation("UserTestPerformance")
  tests                     Test[]            @relation("UserTests")
  files                     File[]            @relation("UserFileRelation")
  createdAt                DateTime          @default(now())
  updatedAt                DateTime          @updatedAt
}

model Reminder {
  id        String   @id @default(cuid())
  userId    String
  testDate  DateTime
  emailSent Boolean  @default(false)
  user      User     @relation("UserReminders", fields: [userId], references: [id])
  createdAt DateTime @default(now())

  @@index([userId])
}

model Test {
  id                String            @id @default(cuid())
  userId           String
  questions        Question[]        @relation("TestQuestions")
  createdAt        DateTime          @default(now())
  user             User              @relation("UserTests", fields: [userId], references: [id])
  status           String             @default("pending")
  testPerformance  TestPerformance[]

  @@index([userId])
}

model Question {
  id            String   @id @default(cuid())
  questionText  String
  options       String[]
  correctAnswer String
  userAnswer    String?
  testId        String
  explanation   String?
  status        String    @default("pending")
  test          Test     @relation("TestQuestions", fields: [testId], references: [id])

  @@index([testId])
}

model TestPerformance {
  id        String   @id @default(cuid())
  userId    String
  testId    String
  score     Int      @default(0)
  date      DateTime @default(now())
  user      User     @relation("UserTestPerformance", fields: [userId], references: [id])
  test      Test     @relation(fields: [testId], references: [id])

  @@index([userId, testId])
}

model File {
  id        String  @id @default(cuid())
  userId    String 
  originalName String
  s3Key     String  @unique
  contentType   String
  fileSize    Int
  uploadedAt  DateTime @default(now())
  user      User  @relation("UserFileRelation",fields:[userId],references:[id])

  @@index([userId])
}

